version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0 #Para raspberry pi felipeagger/kafka-zookeeper:2.12
    tty: true
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  broker: #Kafka
    image: confluentinc/cp-kafka:5.5.0 #Para raspberry pi fogsyio/kafka:arm32v7-2.2.0
    container_name: broker
    depends_on:
      - zookeeper
    tty: true
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "images:1:1"
  redis-server:
    image: "redis:alpine" #para raspberry pi hypriot/rpi-redis
    command: redis-server --requirepass Qq123456
    tty: true
    ports:
      - "6379:6379"
  app:
    build: ./dir
    image: golang:1.14.3
    ports:
      - "8080:8080" ## Share API port with host machine.
    depends_on:
      - broker
      - redis-server
    volumes:
        - .:/go/src/go-intelligent-monitoring-system
        - /home/:/home/
    working_dir: /go/src/go-intelligent-monitoring-system
    command: go run main.go 
    tty: true
    environment:
        ## General Variables
        - TZ=America/Argentina/Buenos_Aires
        - FTP_DIRECTORY=/home/ariel/fotos_pasillo/
        - CAMARA_DOMAIN=camarasilvia # In case of S3 it's used to define the "bucket" name
        - QUEUE_TOPIC=images
        - QUEUE_BROKER_LIST=broker:9092 #abc.com/kafka1/:80,abc.com/kafka2/:80,abc.com/kafka3/:80
        - AUTHORIZED_FACES_DIRECTORY=/home/ariel/fotos_pasillo/authorized_faces/
        - REDIS_PASS=Qq123456 # must be the same defined in "redis-server" on this file.
        ## AWS variables
        - AWS_S3_BUCKET_POLICY={"Version":"2012-10-17","Statement":[{"Sid":"PublicRead","Effect":"Allow","Principal":"*","Action":["s3:GetObject","s3:GetObjectVersion"],"Resource":"arn:aws:s3:::camarasilvia/*"}]} ## Where camarasilvia must be same as CAMARA_DOMAIN variable
        - SNS_TOPIC=arn:aws:sns:us-east-1:491728392546:monitoringSystem-eMail
        - AWS_ACCESS_KEY_ID=XXX
        - AWS_SECRET_ACCESS_KEY=XXX
        ## Telegram variables
        - TELEGRAM_BOT_TOKEN=XXX
        - TELEGRAM_CHANNEL=@notifims
        - TELEGRAM_USER=@arielbrizi
        ## Notification Type - The adapter to be used
        - NOTIFICATION_TYPE=TELEGRAM # TELEGRAM | SNS

